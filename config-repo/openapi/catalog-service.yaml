openapi: "3.0.2"
info:
  title: aqstore-catalog-service
  version: 1.0.0
  contact:
    name: API SUPPORT
    email: apisupport@example.com
  license:
    name: MIT License
    url: https://mit-license.org/
servers:
  - url: https://localhost:8040/catalog/api/v1


components:
  parameters:
    query_limit:
      name: limit
      in: query
      required: false
      description: The  size of items to return
      schema:
        $ref: '#/components/schemas/limitPerPage'
    query_page:
      name: page
      in: query
      required: false
      description: Number of the page to return
      schema:
        $ref: '#/components/schemas/page'
    query_filter:
      name: filter
      in: query
      required: false
      description: Filter items by text
      schema:
        $ref: '#/components/schemas/safetextName'
        
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    GenericError:
      description: Generic Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  
  
  schemas:
    int16Unsigned:
      type: integer
      format: int16
      minimum: 0
      maximum: 32767
    int64Unsigned:
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854775807
    id_int64Unsigned:
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854775807
      readOnly: true
    limitPerPage:
      description: the limit of the items to return
      type: integer
      format: int16
      minimum: 1
      maximum: 50
      default: 25
    floatPrice:
      description: price in float
      type: number
      format: float
      minimum: 0
      maximum: 1000
    intWeight:
      description: weight size
      type: integer
      format: int16
      minimum: 1
      maximum: 40
    page:
       type: integer
       format: int16
       minimum: 1
       maximum: 32767
       default: 1  
    safetextName:
      description: Safe text for Name
      type: string
      pattern: '^[a-zA-Z0-9 .-]+$'
      minLength: 3
      maxLength: 50
    safetextMessages:
      description: Safe text for Name
      type: string
      pattern: '^[a-zA-Z0-9 .-]+$'
      minLength: 3
      maxLength: 100
    Error:
      type: object
      additionalProperties: false
      description: Error Details
      properties:
        errorCode:
          type: string
          pattern: '^[0-9]{4}$'
          minLength: 4
          maxLength: 4
        errorMessage:
          $ref: '#/components/schemas/safetextMessages'
        datetime:
          type: string
          format: date-time
          maxLength: 24
          example: "2021-01-30T08:30:00Z"
      required:
        - errorCode
        - errorMessage
        - datetime
      example:
        code: 1010
        message: Error Message
    AvailabilityType:
      type: string
      description: the availability of the product
      enum:
        - NOT_AVAILABLE
        - LOW
        - FULL
        - HIGH
      example: GAMING
    Product:
      type: object
      additionalProperties: false
      description: Product's info
      properties:
        id:
          $ref: '#/components/schemas/id_int64Unsigned'
        productName:
          $ref: '#/components/schemas/safetextName'
        availability:
          $ref: '#/components/schemas/AvailabilityType'
        price:
          $ref: '#/components/schemas/floatPrice'
        productType:
          $ref: '#/components/schemas/safetextName'
        brand:
          $ref: '#/components/schemas/safetextName'
        weight:
          $ref: '#/components/schemas/intWeight'
        quantitySold:
          $ref: '#/components/schemas/int64Unsigned'

      required:
        - productName
        - availability
        - price
        - productType
        - brand
        - weight
        - quantitySold
      example:
        id: 1
        productName: Playstation 5 Digital
        price: 499
        availability: NOT_AVAILABLE
        productType: GAMING
        weight: 10
        brand: Microsoft

    ProductList:
      type: object
      additionalProperties: false
      description: List of products
      properties:
        totalItems:
          $ref: '#/components/schemas/int64Unsigned'
        itemsPerPage:
          $ref: '#/components/schemas/limitPerPage'
        allPage:
          $ref: '#/components/schemas/int64Unsigned'
        currentPage:
          $ref: '#/components/schemas/int64Unsigned'
        nextPage:
          $ref: '#/components/schemas/int64Unsigned'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    ShippingMethod:
      type: object
      additionalProperties: false
      description: Shipping's info
      properties:
        id:
          $ref: '#/components/schemas/id_int64Unsigned'
        shippingName:
          $ref: '#/components/schemas/safetextName'
        duration:
          $ref: '#/components/schemas/safetextMessages'
        price:
          $ref: '#/components/schemas/floatPrice'
        maxWeight:
          $ref: '#/components/schemas/int16Unsigned'
      required:
        - id
        - shippingName
        - duration
        - price
        - maxWeight
      example:
        id: 60a37ac1-c7b2-4b32-8557-d8aba5bdd47d
        productName: Corriere Espresso
        duration: 24/48 ore
        price: 9
        maxWeight: 30
    ShippingMethodList:
      type: object
      additionalProperties: false
      description: List of Shipping methods
      properties:
        shippingMethods:
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethod'
        
          



paths:
  /shippings:
    get:
      summary: List all shipping methods
      operationId: listshippings
      tags:
        - Shipping
      responses:
        200:
          description: "A list of shippings methods"
          content:
            application/json:
              schema:
               $ref: "#/components/schemas/ShippingMethodList"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/GenericError'      
  /products:
    get:
      summary: List all products
      operationId: listproducts
      tags:
        - Product
      parameters:
        - $ref: '#/components/parameters/query_limit'
        - $ref: '#/components/parameters/query_page'
        - $ref: '#/components/parameters/query_filter'

      responses:
        200:
          description: "A list of products"
          content:
            application/json:
              schema:
               $ref: "#/components/schemas/ProductList"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/GenericError'
  /products/{productId}:
    get:
      summary: Specified product details
      operationId: show Product by Id
      tags:
        - Product
      parameters:
        - name: productId
          in: path
          required: true
          description: the identify of product to retrieve
          schema:
            $ref: '#/components/schemas/id_int64Unsigned'
      responses:
        200:
          description: Response if valid identify
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/GenericError'


